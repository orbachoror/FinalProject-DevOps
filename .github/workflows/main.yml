name: Deploy to Server with Tests

on:
  push:
    branches: [ main, orbach/gitHub-WorkFlows ]
jobs:

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build React app
        run: npm run build

      - name: Run linting
        run: npm run lint

      - name: Start React app for testing
        run: npm run preview &
        env:
          CI: true

      - name: Wait for app to start
        run: |
          timeout 60 bash -c 'until curl -f http://localhost:4173; do sleep 2; done'
          echo "App is running!"

      - name: Set up Python for Selenium
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Selenium dependencies
        run: |
          cd selenium
          pip install -r requirements.txt

      - name: Setup Chrome for Selenium
        uses: browser-actions/setup-chrome@latest

      - name: Update Selenium config for CI
        run: |
          cd selenium
          echo '{"url": "http://localhost:4173", "holiday_types": ["jewish", "muslim", "christian"]}' > config.json

      - name: Run Selenium Tests
        run: |
          cd selenium
          python testHeadless.py
        timeout-minutes: 5

      - name: Stop React app
        run: pkill -f "vite preview" || true

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build Docker image
        run: docker build . --tag ${{ secrets.DOCKER_USER }}/final-devops-app:latest

      - name: Push to DockerHub
        run: docker push ${{ secrets.DOCKER_USER }}/final-devops-app:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd /opt/app
            sudo docker compose pull && sudo docker compose up -d --force-recreate